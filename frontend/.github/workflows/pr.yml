name: PR Quality Gates

on:
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20.x'
  NEXT_TELEMETRY_DISABLED: '1'

jobs:
  qa-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript type checking
        run: pnpm run qa:types

      - name: ESLint validation
        run: pnpm run qa:lint

      - name: Unused code analysis
        run: pnpm run qa:knip

      - name: Dependency audit
        run: pnpm run qa:deps

      - name: Bundle size analysis
        run: pnpm run qa:size

      - name: Build verification
        run: pnpm run build

  smoke-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: pnpm run build

      - name: Run smoke tests
        run: pnpm run e2e:smoke

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 3

  danger-pr-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Danger.js
        run: npx danger ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}