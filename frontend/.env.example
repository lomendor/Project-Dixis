# Database (PostgreSQL)
# Local dev - use postgres:postgres for simplicity (matches CI)
DATABASE_URL="postgresql://postgres:postgres@127.0.0.1:5432/dixis?schema=public"
# CI will inject DATABASE_URL via workflow job env

NEXT_PUBLIC_API_BASE_URL=http://127.0.0.1:8001/api/v1
NEXT_PUBLIC_APP_URL=http://127.0.0.1:3001
NEXT_PUBLIC_SITE_URL=http://localhost:3001

# Stripe Configuration (Frontend)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# Security Configuration
NEXT_ENABLE_CSP_REPORT_ONLY=false

# Basic Auth for Admin (format: username:password)
BASIC_AUTH="admin:dixis_admin_pass"

# ── Auth (OTP dev stub) ────────────────────────────────────────────────
OTP_BYPASS="000000"      # Στα tests/dev, αυτός ο κωδικός περνά πάντα
OTP_DEV_ECHO="1"         # Στο dev επιστρέφει τον κωδικό από /request-otp (ΜΗΝ το χρησιμοποιείτε production)

# ── Storage (uploads) ─────────────────────────────────────────────────
# Storage driver: fs | s3
STORAGE_DRIVER="fs"

# Optional: Enable image processing with sharp (rotate + resize up to 1200px, quality 85)
ENABLE_IMAGE_PROCESSING="false"

# S3/R2 (only if STORAGE_DRIVER=s3)
S3_BUCKET=""
S3_REGION="auto"
# Optional: custom endpoint for R2/MinIO
S3_ENDPOINT=""
S3_FORCE_PATH_STYLE="false"
# Optional public base (CDN) - supports either S3_PUBLIC_URL_BASE or S3_PUBLIC_BASE
S3_PUBLIC_URL_BASE=""
S3_PUBLIC_BASE=""
S3_ACCESS_KEY_ID=""
S3_SECRET_ACCESS_KEY=""

# ── External Notifiers (Pass 116) ────────────────────────────────────
# Twilio SMS
TWILIO_ACCOUNT_SID=""
TWILIO_AUTH_TOKEN=""
TWILIO_FROM_NUMBER=""

# SendGrid Email
SENDGRID_API_KEY=""
SENDGRID_FROM=""

# Safety toggles (set to 1 in CI/DEV to simulate delivery without external calls)
DIXIS_SMS_DISABLE="1"
DIXIS_EMAIL_DISABLE="1"

# Allow dev-only pages in production (never set to 1 in real production)
DIXIS_DEV="0"

# ── Notification Worker / Cron (Pass 117) ────────────────────────────
DIXIS_CRON_KEY="change-me-strong"

# ── API Guardrails & Ops (Passes 118–120) ────────────────────────────
# Rate limiting uses DB-backed time-bucket strategy
# Automatic cleanup via /api/jobs/maintenance/rl-clean (weekly cron)
# Ops metrics dashboard: /ops/metrics (dev-only or DIXIS_DEV=1)