name: e2e-postgres

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  e2e:
    name: E2E (PostgreSQL)
    runs-on: ubuntu-latest
    if: ${{ !contains(join(github.event.pull_request.labels.*.name, ','), 'ui-only') }}

    env:
      PLAYWRIGHT_BASE_URL: http://127.0.0.1:3001

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'

      - name: pnpm version
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install chromium --with-deps

      - name: Generate Prisma Client & Migrate
        run: |
          pnpm run ci:gen || echo "Prisma gen skipped"
          pnpm run ci:migrate || echo "Prisma migrate skipped"

      - name: Build Next.js app
        run: pnpm run build:ci

      - name: Start Next.js server
        run: pnpm run start:ci &

      - name: Wait for healthz endpoint
        run: npx wait-on http://127.0.0.1:3001/api/healthz --timeout 120000

      - name: Sanity ping (healthz)
        run: curl -sS http://127.0.0.1:3001/api/healthz || true

      - name: Run E2E tests (@smoke only)
        run: npx dotenv-cli -e .env.ci -- npx playwright test --grep @smoke --reporter=line,html --global-timeout=300000 --max-failures=1
        env:
          CI: true
          SKIP_WEBSERVER: 'true'

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-postgres-alias-report
          path: |
            frontend/playwright-report/
            frontend/test-results/
          retention-days: 7
