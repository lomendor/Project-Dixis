name: frontend-ci

on:
  push:
    paths:
      - 'backend/frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    paths:
      - 'backend/frontend/**'
  workflow_dispatch:

concurrency:
  group: frontend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  type-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/frontend
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript type check (strict)
        run: npm run type-check

  frontend-tests:
    runs-on: ubuntu-latest
    needs: type-check
    defaults:
      run:
        working-directory: backend/frontend
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts (on failure only)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-failure
          path: backend/frontend/.next/
          retention-days: 3

  e2e-tests:
    runs-on: ubuntu-latest
    needs: frontend-tests
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: project_dixis_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    defaults:
      run:
        working-directory: backend
    
    steps:
      - uses: actions/checkout@v4
      
      # Setup backend
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_pgsql, mbstring, xml, ctype, json, tokenizer, openssl, curl, fileinfo
      
      - name: Install backend dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: Copy environment file
        run: cp .env.example .env
      
      - name: Generate application key
        run: php artisan key:generate
      
      - name: Configure database
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=project_dixis_test" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env
      
      - name: Run migrations and seed
        run: |
          php artisan migrate --force --env=testing
          php artisan db:seed --force --env=testing
          php artisan db:seed --class=E2ESeeder --force --env=testing
      
      - name: Kill leftover ports
        run: |
          lsof -ti :3000 | xargs -r kill -9 || true
          lsof -ti :3001 | xargs -r kill -9 || true
          lsof -ti :8001 | xargs -r kill -9 || true
      
      - name: Start Laravel server
        run: php artisan serve --host=0.0.0.0 --port=8001 &
        
      # Setup frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/frontend/package-lock.json
      
      - name: Install frontend dependencies
        working-directory: backend/frontend
        run: npm ci
      
      - name: Install Playwright Browsers
        working-directory: backend/frontend
        run: npx playwright install --with-deps chromium
      
      - name: Start Next.js server (production build for E2E)
        working-directory: backend/frontend
        env:
          NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8001/api/v1"
        run: |
          npm run build
          PORT=3001 npm start &
      
      - name: Wait for servers to be ready
        run: |
          echo "Waiting for API server..."
          timeout 60 bash -c 'until curl -f http://localhost:8001/api/health; do sleep 2; done'
          echo "✅ API server ready"
          
          echo "Waiting for frontend server..."
          timeout 60 bash -c 'until curl -f http://localhost:3001; do sleep 2; done'
          echo "✅ Frontend server ready"
          
          echo "Verifying shipping quote API..."
          curl -X POST http://localhost:8001/api/v1/shipping/quote \
            -H "Content-Type: application/json" \
            -d '{"zip":"11527","city":"Athens","weight":2.0,"volume":0.01}' || exit 1
          echo "✅ Shipping API verified"
      
      - name: Run shipping integration E2E tests
        working-directory: backend/frontend
        run: npx playwright test shipping-checkout-e2e.spec.ts --project=chromium
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:3001
          NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8001/api/v1"
          
      - name: Run all E2E tests
        working-directory: backend/frontend
        run: npx playwright test --project=chromium
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:3001
          NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8001/api/v1"
      
      # ENHANCED: Comprehensive artifact uploads with proper naming
      - name: Upload Playwright Report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ github.run_id }}-${{ github.ref_name }}
          path: backend/frontend/playwright-report/
          retention-days: ${{ failure() && 7 || 2 }}
      
      - name: Upload E2E Test Results (always) 
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ github.run_id }}-${{ github.ref_name }}
          path: backend/frontend/test-results/
          retention-days: ${{ failure() && 7 || 2 }}
      
      - name: Upload E2E Videos and Screenshots (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-media-failure-${{ github.run_id }}-${{ github.ref_name }}
          path: |
            backend/frontend/test-results/**/*.webm
            backend/frontend/test-results/**/*.png  
            backend/frontend/playwright-report/**/*.png
          retention-days: 7
      
      - name: Upload E2E Traces (always, essential for debugging)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-traces-${{ github.run_id }}-${{ github.ref_name }}
          path: backend/frontend/test-results/**/*.zip
          retention-days: ${{ failure() && 7 || 3 }}