name: frontend-ci

on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'backend/docs/**'
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'backend/docs/**'
      - '**/*.md'
  workflow_dispatch:

concurrency:
  group: frontend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependabot-smoke:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]' }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
      - name: Type check only (dependabot)
        run: npm run type-check
        env:
          NEXT_TELEMETRY_DISABLED: '1'

  type-check:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]' }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install and build contracts dependencies
        run: |
          if [ -d "../packages/contracts" ]; then
            cd ../packages/contracts
            npm ci
            npm run build
            cd ../../frontend
          else
            echo "No contracts directory found"
          fi

      - name: Run TypeScript type check (strict)
        run: npm run type-check
        env:
          NEXT_TELEMETRY_DISABLED: '1'

  frontend-tests:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]' }}
    needs: type-check
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install and build contracts dependencies
        run: |
          if [ -d "../packages/contracts" ]; then
            cd ../packages/contracts
            npm ci
            npm run build
            cd ../../frontend
          else
            echo "No contracts directory found"
          fi

      # Temporarily disabled for hotfix
      # - name: Run ESLint
      #   run: npm run lint

      - name: Build application
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: '1'
      
      - name: Upload build artifacts (on failure only)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-failure
          path: frontend/.next/
          retention-days: 3

  e2e-tests:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]' }}
    continue-on-error: ${{ startsWith(github.head_ref, 'ci/') }}
    needs: frontend-tests

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci

      - name: Install and build contracts dependencies
        run: |
          if [ -d "../packages/contracts" ]; then
            cd ../packages/contracts
            npm ci
            npm run build
            echo "✅ Contracts built successfully"
          else
            echo "No contracts directory found"
          fi

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Start Test API server (SSR-safe mock backend)
        env:
          TEST_API_PORT: 8001
        run: |
          nohup npm run test:api > /tmp/test-api.log 2>&1 &
          npx --yes wait-on http://127.0.0.1:8001/health
          echo "✅ Test API server ready on port 8001"

      - name: Build and start Next.js app
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8001"
          API_BASE_URL: "http://127.0.0.1:8001"
          NEXT_TELEMETRY_DISABLED: 1
        run: |
          npm run build
          nohup npm run start -- -p 3000 > /tmp/app.log 2>&1 &
          npx --yes wait-on http://127.0.0.1:3000
          echo "✅ Next.js app ready on port 3000"

      - name: Set E2E quarantine (Pass 41: global @quarantine tag)
        run: |
          echo "QUARANTINE_REGEX=@quarantine" >> $GITHUB_ENV
          echo "✅ E2E quarantine enabled: tests tagged @quarantine will be skipped"

      - name: Run auth-probe diagnostic (smoke test)
        run: npx playwright test auth-probe.spec.ts --reporter=github
        env:
          CI: true
          BASE_URL: http://127.0.0.1:3000
          PLAYWRIGHT_BASE_URL: http://127.0.0.1:3000
          API_BASE_URL: http://127.0.0.1:8001
          NEXT_PUBLIC_API_BASE_URL: http://127.0.0.1:8001
          NEXT_PUBLIC_E2E: "true"
          NEXT_TELEMETRY_DISABLED: 1

      - name: Run all E2E tests (excluding @quarantine)
        run: npm run test:e2e:ci
        env:
          CI: true
          BASE_URL: http://127.0.0.1:3000
          PLAYWRIGHT_BASE_URL: http://127.0.0.1:3000
          API_BASE_URL: http://127.0.0.1:8001
          NEXT_PUBLIC_API_BASE_URL: http://127.0.0.1:8001
          NEXT_PUBLIC_E2E: "true"
          NEXT_TELEMETRY_DISABLED: 1
      
      - name: Upload E2E test results (on failure only)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-failure
          path: frontend/playwright-report/
          retention-days: 3
      
      - name: Upload E2E videos and screenshots (on failure only)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-videos-screenshots-failure
          path: |
            frontend/test-results/**/*.webm
            frontend/test-results/**/*.png
            frontend/playwright-report/**/*.png
          retention-days: 5
      
      - name: Upload E2E traces (on failure only)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-traces-failure
          path: frontend/test-results/**/*.zip
          retention-days: 3

      # Always upload artifacts for analysis
      - name: Upload Playwright report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-playwright-report-always
          path: frontend/playwright-report/
          retention-days: 7

      - name: Upload test results (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-always
          path: frontend/test-results/
          retention-days: 7