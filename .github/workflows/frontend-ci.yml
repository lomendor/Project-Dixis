name: frontend-ci

on:
  push:
    paths: ['backend/frontend/**', '.github/workflows/frontend-ci.yml']
  pull_request:
    paths: ['backend/frontend/**']
  workflow_dispatch:

concurrency:
  group: frontend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: project_dixis_test
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      # Backend: Laravel @ 8001
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, bcmath, pgsql, pdo_pgsql
          coverage: none

      - name: Install backend deps
        working-directory: backend
        run: |
          composer install --no-interaction --prefer-dist
          cp .env.example .env || touch .env
          php artisan key:generate
          {
            echo "DB_CONNECTION=pgsql"
            echo "DB_HOST=127.0.0.1"
            echo "DB_PORT=5432"
            echo "DB_DATABASE=project_dixis_test"
            echo "DB_USERNAME=postgres"
            echo "DB_PASSWORD=postgres"
          } >> .env
          php artisan migrate:fresh --seed --env=testing

      - name: Start backend (8001)
        working-directory: backend
        run: |
          nohup php artisan serve --host=127.0.0.1 --port=8001 > ../.backend.log 2>&1 &
          for i in {1..30}; do
            curl -fsS http://127.0.0.1:8001/api/health && break
            sleep 1
          done
          curl -fsS http://127.0.0.1:8001/api/health

      # Frontend @ 3001
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend deps
        working-directory: backend/frontend
        run: npm ci

      - name: Build frontend
        working-directory: backend/frontend
        env:
          NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8001/api/v1"
        run: npm run build

      - name: Install Playwright
        working-directory: backend/frontend
        run: npx playwright install --with-deps

      - name: Run Playwright tests (only-on-failure artifacts)
        working-directory: backend/frontend
        env:
          NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8001/api/v1"
          PORT: "3001"
        run: |
          # Start frontend server on port 3001
          nohup npm run start -- -p 3001 > ../.frontend.log 2>&1 &
          for i in {1..30}; do
            curl -fsS http://127.0.0.1:3001 && break
            sleep 1
          done
          npx playwright test

      - name: Upload Playwright report on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: backend/frontend/playwright-report
          retention-days: 3

      - name: Upload traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: backend/frontend/test-results
          retention-days: 3