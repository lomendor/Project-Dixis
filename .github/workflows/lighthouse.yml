name: Lighthouse CI

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't block the build

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/frontend/package-lock.json
      - name: Install frontend dependencies
        run: cd backend/frontend && npm ci

      # Contracts dependencies not needed for backend/frontend structure
      - name: Build frontend
        run: |
          cd backend/frontend
          npm run build
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:3020
          NEXT_TELEMETRY_DISABLED: 1

      - name: Install wait-on utility
        run: npm install -g wait-on

      - name: Install express for mock API
        run: npm install express

      - name: Start mock API and Next
        run: |
          cd backend/frontend
          echo "Starting mock API..."
          MOCK_PORT=3020 npm run mock:api > mock-api.log 2>&1 &
          sleep 5
          echo "Mock API startup logs (first 20 lines):"
          head -20 mock-api.log || echo "No mock API logs yet"
          echo "Checking if mock API bound to port 3020..."
          lsof -i :3020 || echo "No process on port 3020"
          echo "Testing direct curl to mock API health endpoint..."
          curl -v http://localhost:3020/api/v1/health || echo "Curl failed"
          echo "Starting Next.js..."
          PORT=3020 npm run start:ci &
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:3020
          NEXT_TELEMETRY_DISABLED: 1
      - name: Wait for services
        run: |
          npx wait-on --timeout 90000 http://localhost:3020/api/v1/health
          npx wait-on --timeout 90000 http://localhost:3020

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli
      - name: Lighthouse CI (use existing server)
        continue-on-error: ${{ github.event_name == 'pull_request' }}
        working-directory: backend/frontend
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_PUBLIC_API_BASE_URL: http://localhost:3020
          NODE_ENV: production
          CI: true
          NEXT_TELEMETRY_DISABLED: 1
        run: |
          npx @lhci/cli autorun \
            --collect.url=http://localhost:3020 \
            --collect.startServerCommand="echo already started" \
            --assert.preset=lighthouse:recommended \
            --upload.target=filesystem \
            --upload.outputDir=.lighthouseci
        timeout-minutes: 10

      - name: Upload Lighthouse artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouseci
          path: backend/frontend/.lighthouseci

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-report
          path: |
            backend/frontend/.lighthouseci/
          retention-days: 7

      - name: Create reports directory
        run: |
          mkdir -p docs/reports/$(date +%Y-%m-%d)

      - name: Generate Lighthouse summary
        if: always()
        run: |
          cd backend/frontend
          if [ -d ".lighthouseci" ]; then
            echo "# 🏍️ Lighthouse CI Summary - $(date +%Y-%m-%d)" > ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "## 📊 Performance Metrics" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "*Analysis using mock API (port 3020) - no database dependencies*" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "- Next.js: http://localhost:3020" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "- Mock API: http://localhost:3020" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
            echo "Generated on: $(date)" >> ../../docs/reports/$(date +%Y-%m-%d)/LHCI-SUMMARY.md
          fi

      - name: Upload Lighthouse summary
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-summary
          path: docs/reports/*/LHCI-SUMMARY.md
          retention-days: 7

      - name: Cleanup background processes
        if: always()
        run: |
          echo "Stopping background processes..."
          # Kill any processes on the ports
          lsof -ti:3020 | xargs -r kill 2>/dev/null || true
