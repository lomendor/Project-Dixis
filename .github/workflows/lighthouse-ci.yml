name: Lighthouse CI

on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/lighthouse-ci.yml'
  pull_request:
    paths:
      - 'frontend/**'
  workflow_dispatch:

concurrency:
  group: lighthouse-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    permissions:
      contents: read
      pull-requests: write
      
    defaults:
      run:
        working-directory: frontend
    
    env:
      NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8001/api/v1"
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: project_dixis_test
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      # Backend setup for API calls
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_pgsql, mbstring, xml, ctype, json, tokenizer
      
      - name: Install backend dependencies
        working-directory: backend
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: Setup backend environment
        working-directory: backend
        run: |
          cp .env.example .env
          php artisan key:generate
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=project_dixis_test" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env
      
      - name: Setup database
        working-directory: backend
        run: |
          php artisan migrate --force
          php artisan db:seed --force
      
      - name: Start Laravel API
        working-directory: backend
        run: php artisan serve --host=0.0.0.0 --port=8001 &
      
      # Frontend setup
      - name: Install frontend dependencies
        run: npm ci
      
      - name: Build frontend (production)
        run: npm run build
      
      - name: Start frontend server
        run: PORT=3001 npm start &
      
      - name: Wait for servers
        run: |
          echo "⏳ Waiting for API server..."
          timeout 60 bash -c 'until curl -f http://127.0.0.1:8001/api/health; do sleep 2; done'
          echo "✅ API ready"
          
          echo "⏳ Waiting for frontend server..."  
          timeout 60 bash -c 'until curl -f http://127.0.0.1:3001; do sleep 2; done'
          echo "✅ Frontend ready"
      
      # Lighthouse CI
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x
      
      - name: Run Lighthouse CI
        run: |
          lhci autorun --config=.lighthouserc.js
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Lighthouse Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports-${{ github.run_id }}-${{ github.ref_name }}
          path: |
            frontend/.lighthouseci/
            frontend/lighthouse-reports/
          retention-days: ${{ failure() && 7 || 5 }}