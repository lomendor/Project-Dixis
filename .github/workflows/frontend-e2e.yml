name: Frontend E2E Tests

on:
  push:
    paths:
      - 'backend/frontend/**'
      - 'backend/app/**'
      - 'backend/database/**'
      - 'backend/routes/**'
      - '.github/workflows/frontend-e2e.yml'
  pull_request:
    paths:
      - 'backend/frontend/**'
      - 'backend/app/**'
      - 'backend/database/**'
      - 'backend/routes/**'
  schedule:
    - cron: '0 3 * * *'  # Daily at 3:00 UTC
  workflow_dispatch:

concurrency:
  group: frontend-e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: backend/frontend
    
    env:
      NEXT_PUBLIC_API_BASE_URL: "http://127.0.0.1:8001/api/v1"
      PLAYWRIGHT_JOBS: 1
      PW_TEST_RETRIES: 2
      PW_TEST_TIMEOUT: 30000
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: project_dixis_test
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/frontend/package-lock.json
      
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('backend/frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-playwright-
      
      # Backend setup
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, bcmath, pgsql, pdo_pgsql
          coverage: none
      
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: backend/vendor
          key: composer-${{ runner.os }}-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-
            composer-
      
      - name: Install backend dependencies
        working-directory: backend
        run: composer install --no-interaction --prefer-dist
      
      - name: Copy .env
        working-directory: backend
        run: cp .env.example .env
      
      - name: Generate application key
        working-directory: backend
        run: php artisan key:generate
      
      - name: Configure DB env (testing)
        working-directory: backend
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=project_dixis_test" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env
      
      - name: Run migrations and seed
        working-directory: backend
        run: php artisan migrate:fresh --seed --env=testing
      
      - name: Start Laravel server
        working-directory: backend
        run: php artisan serve --host=127.0.0.1 --port=8001 --env=testing &
      
      - name: Wait for Laravel API
        run: |
          timeout 60 bash -c 'until curl -f http://127.0.0.1:8001/api/health; do sleep 2; done'
      
      # Frontend setup
      - name: Install frontend dependencies
        run: npm ci
      
      - name: Set API base URL
        run: echo "NEXT_PUBLIC_API_BASE_URL=http://127.0.0.1:8001/api/v1" > .env.local
      
      - name: Install Playwright browsers with dependencies
        run: npx playwright install --with-deps
      
      - name: Build frontend
        run: npm run build || echo "no build step"
      
      - name: Start frontend server
        run: nohup npm run start -- -p 3001 > ../frontend.log 2>&1 &
      
      - name: Wait for frontend server
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3001; do sleep 2; done'
      
      # Run E2E tests
      - name: Run E2E
        run: npx playwright test
      
      # Artifacts ΜΟΝΟ σε αποτυχία
      - name: Upload Playwright report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: backend/frontend/playwright-report
          retention-days: 3

      - name: Upload test artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pw-artifacts
          path: |
            backend/frontend/test-results
            backend/frontend/playwright/.cache
          retention-days: 3