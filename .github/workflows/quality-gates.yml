name: quality-gates
on:
  pull_request:
    paths:
      - 'frontend/**'
      - '.github/workflows/quality-gates.yml'
  push:
    branches:
      - 'feat/**'
      - 'ci/**'
    paths:
      - 'frontend/**'
      - '.github/workflows/quality-gates.yml'
jobs:
  gates:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install
        working-directory: frontend
        run: |
          if [ -f pnpm-lock.yaml ]; then npm i -g pnpm && pnpm i --frozen-lockfile; \
          elif [ -f yarn.lock ]; then yarn install --frozen-lockfile; \
          else npm ci; fi
      - name: Vitest JSON
        working-directory: frontend
        run: |
          npx vitest run --reporter=json > vitest.json || true
      - name: Gate
        working-directory: frontend
        env:
          SKIP_LIMIT: 10
        run: |
          node - <<'NODE'
const fs=require('fs');
let failed=99,skipped=99;
try{
  const d=JSON.parse(fs.readFileSync('vitest.json','utf8'));
  failed=d.numFailedTests||0;
  skipped=d.numPendingTests||0;
}catch(e){console.error('Parse error:',e.message);}
const ok=(failed===0)&&(skipped<=Number(process.env.SKIP_LIMIT||10));
console.log({ok, failed, skipped, limit:process.env.SKIP_LIMIT});
process.exit(ok?0:1);
NODE
