name: backend-ci
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    paths:
      - 'backend/**'
  schedule:
    - cron: '0 3 * * *'  # Daily at 3:00 UTC
  workflow_dispatch:
concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  php-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: project_dixis_test
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, bcmath, pgsql, pdo_pgsql
          coverage: none
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: backend/vendor
          key: composer-${{ runner.os }}-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-
            composer-
      - name: Install deps
        run: composer install --no-interaction --prefer-dist
      - name: Copy .env
        run: cp .env.example .env
      - name: App key
        run: php artisan key:generate
      - name: Configure DB env (testing)
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=project_dixis_test" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env
      - name: Migrate & Seed (fresh)
        run: php artisan migrate:fresh --seed --env=testing
      - name: Run tests
        run: |
          if php artisan test --testsuite=Feature --group mvp --env=testing --testdox 2>/dev/null; then
            echo "✅ MVP feature tests passed"
          else
            echo "⚠️ No MVP tests found, running all tests"
            php artisan test --env=testing --testdox
          fi
      - name: Upload OpenAPI specification (on failure only)
        if: failure() 
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec-failure
          path: backend/docs/openapi.yml
          retention-days: 3
