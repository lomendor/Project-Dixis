name: Required Shims
on:
  pull_request:
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
concurrency:
  group: required-shims-${{ github.ref }}
  cancel-in-progress: true

jobs:
  type-check:
    if: ${{ always() }}
    name: type-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci
      - name: Install and build contracts dependencies
        run: |
          if [ -d "packages/contracts" ]; then
            cd packages/contracts
            npm ci
            npm run build
          else
            echo "No contracts directory found"
          fi
      - name: TypeScript check
        working-directory: frontend
        run: npm run type-check

  frontend-tests:
    if: ${{ always() }}
    name: frontend-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci
      - name: Install and build contracts dependencies
        run: |
          if [ -d "packages/contracts" ]; then
            cd packages/contracts
            npm ci
            npm run build
          else
            echo "No contracts directory found"
          fi
      - name: Run unit tests
        working-directory: frontend
        run: npm run test:unit:ci || npx vitest run --passWithNoTests

  danger:
    if: ${{ always() }}
    name: danger
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Danger check (shim)
        run: echo "âœ… danger shim - DangerJS configured separately" && exit 0

  php-tests:
    if: ${{ always() }}
    name: php-tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: project_dixis_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_pgsql, mbstring, xml, ctype, json, tokenizer

      - name: Install backend dependencies
        run: cd backend && composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup backend environment
        run: |
          cd backend
          cp .env.example .env
          php artisan key:generate
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=project_dixis_test" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env

      - name: Run database migrations
        run: cd backend && php artisan migrate:fresh --seed

      - name: Run PHP tests
        run: cd backend && php artisan test
